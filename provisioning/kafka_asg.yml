---
Description: ExDataLab Confluent Kafka ASG Deployment
Parameters:
  VpcId:
    Description: VPC to deploy to
    Type: String
  AmiId:
    Description: AMI ID to launch in ASG
    Type: String
  AsgSubnets:
    Description: Subnets in which ASG should be hosted
    Type: CommaDelimitedList
  AsgSubnetAzs:
    Description: Availability zones in which ASG should be hosted
    Type: CommaDelimitedList
  KeyName:
    Description: EC2 key name to use for instances
    Type: String
  BrokerCount:
    Description: Number of kafka brokers to provision
    Type: String
  MinInstancesInService:
    Description: Min ISR count for rolling updates
    Type: String
  InstanceSecgroup:
    Description: Instance SecurityGroup
    Type: String
  InstanceType:
    Description: Instance SecurityGroup
    Type: String
    Default: t2.micro
  Subnet1:
    Description: Subnet for ENI 1
    Type: String
    Default: subnet-5a7dd010
  Subnet2:
    Description: Subnet for ENI 2
    Type: String
    Default: subnet-f9ecf5a4
  Subnet3:
    Description: Subnet for ENI 3
    Type: String
    Default: subnet-d88a7ebf
Resources:
  NetworkInterface1:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId:
        Ref: Subnet1
      PrivateIpAddress: 10.100.1.200
      Description: ENI for Kafka broker 0
      GroupSet:
      - Ref: InstanceSecgroup
      Tags:
      - Key: Name
        Value: KAFKA-0
  NetworkInterface2:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId:
        Ref: Subnet2
      PrivateIpAddress: 10.100.2.200
      Description: ENI for Kafka broker 1
      GroupSet:
      - Ref: InstanceSecgroup
      Tags:
      - Key: Name
        Value: KAFKA-1
  NetworkInterface3:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId:
        Ref: Subnet3
      PrivateIpAddress: 10.100.3.200
      Description: ENI for Kafka broker 2
      GroupSet:
      - Ref: InstanceSecgroup
      Tags:
      - Key: Name
        Value: KAFKA-2
  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: Kafka-Instance-Policy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - s3:*
            - cloudwatch:GetMetricStatistics
            - cloudwatch:ListMetrics
            - cloudwatch:PutMetricData
            - ec2:Describe*
            - ec2:List*
            - kms:Decrypt
            - kms:Get*
            - kms:List*
            - dynamodb:*
            - cloudformation:SignalResource
            - ec2:AttachVolume
            - ec2:CreateVolume
            - ec2:CreateTags
            - ec2:AttachNetworkInterface
            - ec2:DetachNetworkInterface
            - autoscaling:SetInstanceHealth
            Resource: "*"
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - Ref: InstanceRole
  InstanceAsg:
    Type: AWS::AutoScaling::AutoScalingGroup
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService:
          Ref: MinInstancesInService
        MaxBatchSize: 1
        PauseTime: PT10M
        WaitOnResourceSignals: true
    Properties:
      AvailabilityZones:
        Ref: AsgSubnetAzs
      LaunchConfigurationName:
        Ref: InstanceLc
      MaxSize:
        Ref: BrokerCount
      MinSize:
        Ref: BrokerCount
      Tags:
      - Key: Name
        Value:
          Ref: AWS::StackName
        PropagateAtLaunch: true
      - Key: Server_Function
        Value: Packer
        PropagateAtLaunch: true
      - Key: ECS:ServerFunction
        Value: Packer
        PropagateAtLaunch: true
      - Key: System
        Value: ExDataLab
        PropagateAtLaunch: true
      VPCZoneIdentifier:
        Ref: AsgSubnets
    CreationPolicy:
      AutoScalingCreationPolicy:
        # MinSuccessfulInstancesPercent: 100
        MinSuccessfulInstancesPercent: 0
      ResourceSignal:
        Count: 3
        Timeout: PT30M
  InstanceLc:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: false
      IamInstanceProfile:
        Ref: InstanceProfile
      ImageId:
        Ref: AmiId
      InstanceMonitoring: true
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: KeyName
      SecurityGroups:
      - Ref: InstanceSecgroup
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - ''
            - "#!/bin/bash -e\n"
            - 'echo "hello userdata - running by $(whoami)"'
            - "\n"
            - "ruby --version\n"
            - "gem install aws-sdk trollop\n"
            - 'echo "attach proper network interface"'
            - "\n"
            - "ruby /usr/local/bin/eni_switcher.rb\n"
            - 'sleep "$(shuf -i 1-100 -n 1)"'
            - "\n"
            - "systemctl enable kafka \n"
            - "systemctl start kafka \n"
            - "cfn-signal -e 0 --stack "
            - Ref: AWS::StackName
            - " --resource InstanceAsg "
            - " --region "
            - Ref: AWS::Region
            - "\n"
Outputs:
  Environment:
    Description: Environment launched into
    Value: ExDataLab
AWSTemplateFormatVersion: '2010-09-09'
